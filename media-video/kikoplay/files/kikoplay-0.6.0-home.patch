diff --git a/Download/Script/scriptmanager.cpp b/Download/Script/scriptmanager.cpp
index f99c261..8ede8e3 100644
--- a/Download/Script/scriptmanager.cpp
+++ b/Download/Script/scriptmanager.cpp
@@ -163,7 +163,11 @@ QString ScriptManager::search(QString sid, const QString &keyword, int page, int
     {
         if(s.id==sid)
         {
+#ifndef CONFIG_HOME_DATA
             scriptPath=QCoreApplication::applicationDirPath()+"/script/"+s.fileName;
+#else
+            scriptPath=QDir::homePath()+"/.config/kikoplay/script/"+s.fileName;
+#endif
             break;
         }
     }
@@ -270,7 +274,11 @@ void ScriptManager::removeScript(const QModelIndex &index)
         else
             normalScriptId="";
     }
+#ifndef CONFIG_HOME_DATA
     QFileInfo fi(QCoreApplication::applicationDirPath()+"/script/"+script.fileName);
+#else
+    QFileInfo fi(QDir::homePath()+"/.config/kikoplay/script/"+script.fileName);
+#endif
     if(fi.exists()) fi.dir().remove(fi.fileName());
     beginRemoveRows(QModelIndex(),index.row(),index.row());
     scriptList.removeAt(index.row());
@@ -319,7 +327,11 @@ QVariant ScriptManager::headerData(int section, Qt::Orientation orientation, int
 
 void ScriptWorker::refreshScriptList()
 {
+#ifndef CONFIG_HOME_DATA
     QString scriptPath(QCoreApplication::applicationDirPath()+"/script/");
+#else
+    QString scriptPath(QDir::homePath()+"/.config/kikoplay/script/");
+#endif
     QDir folder(scriptPath);
     QList<ScriptInfo> sList;
     for (QFileInfo fileInfo : folder.entryInfoList())
diff --git a/Download/aria2jsonrpc.cpp b/Download/aria2jsonrpc.cpp
index 7999128..43bc63d 100644
--- a/Download/aria2jsonrpc.cpp
+++ b/Download/aria2jsonrpc.cpp
@@ -1,4 +1,5 @@
 #include "aria2jsonrpc.h"
+#include <QFileInfo>
 #include <QNetworkAccessManager>
 #include <QNetworkRequest>
 #include <QNetworkReply>
@@ -19,7 +20,13 @@ Aria2JsonRPC::Aria2JsonRPC(QObject *parent) : QObject(parent)
 #ifdef Q_OS_WIN
     process->start(QCoreApplication::applicationDirPath()+"\\aria2c.exe", args);
 #else
-    process->start(QCoreApplication::applicationDirPath()+"/aria2c", args);
+    QFileInfo check_file(QCoreApplication::applicationDirPath()+"/aria2c");
+    /* check if file exists and if yes: Is it really a file and no directory? */
+    if (check_file.exists() && check_file.isFile()) {
+        process->start(QCoreApplication::applicationDirPath()+"/aria2c", args);
+    } else {
+        process->start("aria2c", args);
+    }
 
 #endif
     process->waitForStarted(-1);
diff --git a/LANServer/httpserver.cpp b/LANServer/httpserver.cpp
index 5b3fa08..d66a6ee 100644
--- a/LANServer/httpserver.cpp
+++ b/LANServer/httpserver.cpp
@@ -127,7 +127,11 @@ namespace
 HttpServer::HttpServer(QObject *parent) : QObject(parent)
 {
     MediaFileHandler *handler=new MediaFileHandler(&mediaHash,this);
+#ifndef CONFIG_HOME_DATA
     handler->setDocumentRoot(QCoreApplication::applicationDirPath()+"/web");
+#else
+    handler->setDocumentRoot(QDir::homePath()+"/.config/kikoplay/web");
+#endif
     handler->addRedirect(QRegExp("^$"), "/index.html");
 
     QHttpEngine::QObjectHandler *apiHandler=new QHttpEngine::QObjectHandler(this);
diff --git a/globalobjects.cpp b/globalobjects.cpp
index 07bf674..32b82a2 100644
--- a/globalobjects.cpp
+++ b/globalobjects.cpp
@@ -42,7 +42,11 @@ namespace  {
 }
 void GlobalObjects::init()
 {
+#ifndef CONFIG_HOME_DATA
     dataPath=QCoreApplication::applicationDirPath()+"/data/";
+#else
+    dataPath=QDir::homePath()+"/.config/kikoplay/data/";
+#endif
     QDir dir;
     if(!dir.exists(dataPath))
     {
